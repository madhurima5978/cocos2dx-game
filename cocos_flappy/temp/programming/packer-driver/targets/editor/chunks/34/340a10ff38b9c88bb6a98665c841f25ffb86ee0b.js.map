{"version":3,"sources":["file:///C:/Users/DELL/NewProject_1/assets/Scripts/Pipes.ts"],"names":["_decorator","Component","Node","Vec3","screen","find","UITransform","ccclass","property","random","min","max","Math","Pipes","type","tooltip","tempStartLocationUp","tempStartLocationDown","scene","windowSize","game","pipeSpeed","tempSpeed","isPass","onLoad","getComponent","initPos","x","topPipe","width","gap","topHeight","y","BottomPipe","setPosition","update","deltaTime","position","passPipe","createPipe","destroy"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Vec3, screen, find, UITransform } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nconst random = (min, max) => {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\n@ccclass('Pipes')\r\nexport class Pipes extends Component {\r\n    @property({\r\n        type: Node,\r\n        tooltip: 'Top pipe'\r\n    })\r\n    public topPipe: Node;\r\n    @property({\r\n        type: Node,\r\n        tooltip: 'Bottom pipe'\r\n    })\r\n    public BottomPipe: Node;\r\n\r\n    public tempStartLocationUp:Vec3 = new Vec3(0,0,0)\r\n    public tempStartLocationDown:Vec3 = new Vec3(0,0,0)\r\n    public scene = screen.windowSize;\r\n\r\n    public game; //speed of pipes from Gamectrl\r\n    public pipeSpeed:number;\r\n    public tempSpeed:number;\r\n\r\n\r\n    isPass: boolean;\r\n\r\n    onLoad(){\r\n        this.game = find(\"GameCtrl\").getComponent(\"GameCtrl\");\r\n        this.pipeSpeed = this.game.pipeSpeed;\r\n        this.initPos();\r\n        this.isPass = false;\r\n    }\r\n    initPos(){\r\n\r\n        this.tempStartLocationUp.x = (this.topPipe.getComponent(UITransform).width + (this.scene.width)/2);\r\n        this.tempStartLocationDown.x = (this.topPipe.getComponent(UITransform).width + (this.scene.width)/2);\r\n\r\n        let gap = random(90, 100);\r\n        let topHeight = random(0, 450);\r\n\r\n        this.tempStartLocationUp.y = topHeight;\r\n        this.tempStartLocationDown.y = (topHeight - (gap * 10));\r\n\r\n        this.BottomPipe.setPosition(this.tempStartLocationDown);\r\n        this.topPipe.setPosition(this.tempStartLocationUp);\r\n    }\r\n    update(deltaTime){\r\n\r\n        this.tempSpeed = this.pipeSpeed * deltaTime;\r\n\r\n        this.tempStartLocationDown = this.BottomPipe.position;\r\n        this.tempStartLocationUp = this.topPipe.position;\r\n\r\n        this.tempStartLocationDown.x -= this.tempSpeed;\r\n        this.tempStartLocationUp.x -= this.tempSpeed;\r\n\r\n        this.BottomPipe.setPosition(this.tempStartLocationDown);\r\n        this.topPipe.setPosition(this.tempStartLocationUp);\r\n        \r\n\r\n        if(this.isPass == false && this.topPipe.position.x <= 0){\r\n            this.isPass = true;\r\n            this.game.passPipe();\r\n\r\n            \r\n        }\r\n\r\n        if(this.topPipe.position.x < (0 - this.scene.width)){\r\n            this.game.createPipe();\r\n            this.destroy();\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\n"]}