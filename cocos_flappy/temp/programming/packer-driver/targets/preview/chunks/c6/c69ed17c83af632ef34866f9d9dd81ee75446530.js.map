{"version":3,"sources":["file:///C:/Users/DELL/NewProject_1/assets/Scripts/GameCtrl.ts"],"names":["_decorator","CCInteger","Component","director","Node","Contact2DType","Collider2D","Ground","Results","Bird","PipePool","BirdAudio","ccclass","property","GameCtrl","type","tooltip","isOver","onLoad","initListener","result","resetScore","pause","node","on","EventType","TOUCH_START","resetGame","bird","resetBird","startGame","fly","clip","onAudioQueue","hideResults","resume","gameOver","showResults","pipeQueue","reset","passPipe","addScore","createPipe","addPool","contactGroundPipe","Collider","getComponent","BEGIN_CONTACT","onBeginContact","selfCollider","otherCollider","contaxt","hitSomething","birdStruck","update"],"mappings":"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","sourcesContent":["import { _decorator, \r\n    CCInteger,\r\n    Component, \r\n    director, \r\n    EventKeyboard, \r\n    input,\r\n    Input, \r\n    KeyCode, \r\n    Node, \r\n    Contact2DType,\r\n    Collider2D, \r\n    IPhysics2DContact\r\n } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\nimport { Ground } from './Ground';\r\nimport { Results } from './Results';\r\nimport { Bird } from './Bird'\r\nimport { PipePool } from './PipePool'\r\nimport { BirdAudio  } from './BirdAudio';\r\n\r\n@ccclass('GameCtrl')\r\nexport class GameCtrl extends Component {\r\n    \r\n    @property({\r\n\r\n        type: Ground,\r\n        tooltip: 'this is ground'\r\n    })\r\n    public ground: Ground\r\n\r\n\r\n    @property({\r\n        type: Results,\r\n        tooltip: 'results here'\r\n    })\r\n    public result: Results\r\n\r\n    @property({\r\n        type: BirdAudio\r\n    })\r\n    public clip: BirdAudio;\r\n\r\n    @property({\r\n        type: Bird \r\n    })\r\n    public bird: Bird;\r\n\r\n\r\n    @property({\r\n        type:PipePool\r\n    })\r\n    public pipeQueue: PipePool;\r\n\r\n    @property({\r\n        type: CCInteger\r\n    })\r\n    public speed: number = 300;\r\n\r\n    @property({\r\n        type: CCInteger\r\n    })\r\n    public pipeSpeed: number = 200;\r\n\r\n    public isOver: boolean;\r\n\r\n    onLoad(){\r\n\r\n        this.initListener();\r\n        this.result.resetScore();\r\n        this.isOver = true;\r\n        director.pause();\r\n\r\n    }\r\n\r\n    initListener(){\r\n\r\n        //input.on(Input.EventType.KEY_DOWN, this.onKeyDown, this );\r\n\r\n        this.node.on(Node.EventType.TOUCH_START, () => {\r\n            if(this.isOver == true)\r\n            {\r\n                this.resetGame();\r\n                this.bird.resetBird();\r\n                this.startGame();\r\n            }\r\n            if(this.isOver == false){\r\n                this.bird.fly();\r\n                this.clip.onAudioQueue(0);\r\n            }\r\n            \r\n        })\r\n\r\n    }\r\n    // //testing method delete at last\r\n    // onKeyDown(event: EventKeyboard){\r\n    //     switch(event.keyCode){\r\n    //         case KeyCode.KEY_A:\r\n    //             this.gameOver();\r\n    //         break;\r\n    //         case KeyCode.KEY_P:\r\n    //             this.result.addScore();\r\n    //         break;\r\n    //         case KeyCode.KEY_Q:\r\n    //             this.resetGame();\r\n    //             this.bird.resetBird();\r\n    //     }\r\n    // }\r\n    startGame(){\r\n\r\n        this.result.hideResults();\r\n        director.resume();\r\n    }\r\n\r\n    gameOver(){\r\n        this.result.showResults();\r\n        this.isOver = true;\r\n        director.pause();\r\n        this.clip.onAudioQueue(3);\r\n    }\r\n\r\n    resetGame(){\r\n        this.result.resetScore();\r\n        this.pipeQueue.reset();\r\n        this.isOver = false;\r\n        this.startGame();\r\n    }\r\n    passPipe(){\r\n        this.result.addScore();\r\n        this.clip.onAudioQueue(1);\r\n    }\r\n\r\n    createPipe(){\r\n        this.pipeQueue.addPool();\r\n\r\n    }\r\n    contactGroundPipe(){\r\n        let Collider = this.bird.getComponent(Collider2D)\r\n\r\n        if(Collider){\r\n            Collider.on(Contact2DType.BEGIN_CONTACT,  this\r\n                .onBeginContact, this)\r\n        }\r\n    }\r\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contaxt:IPhysics2DContact | null){\r\n        this.bird.hitSomething = true;\r\n        this.clip.onAudioQueue(2);\r\n\r\n    }\r\n\r\n    birdStruck(){\r\n        this.contactGroundPipe()\r\n\r\n        if(this.bird.hitSomething == true){\r\n            this.gameOver()\r\n        }\r\n    }\r\n\r\n    update(){\r\n        if(this.isOver == false){\r\n            this.birdStruck();\r\n        }\r\n    }\r\n    \r\n}\r\n\r\n\r\n"]}